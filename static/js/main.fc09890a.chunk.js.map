{"version":3,"sources":["apis/jsonPlaceholder.js","actions/index.js","components/UserHeader.js","components/PostList.js","components/App.js","reducers/postsReducer.js","reducers/usersReducer.js","reducers/index.js","index.js"],"names":["axios","create","baseURL","fetchUser","id","dispatch","a","jsonplaceholder","get","response","type","payload","data","connect","state","ownProps","user","users","find","userId","className","name","posts","fetchPostsAndUsers","getState","_","chain","map","uniq","forEach","value","useEffect","post","title","body","App","postsReducers","action","usersReducers","combineReducers","postsReducer","usersReducer","store","createStore","Reducers","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"6LAEeA,E,OAAAA,EAAMC,OAAO,CAC1BC,QAAS,yCCKEC,EAAY,SAACC,GAAD,8CAAQ,WAAOC,GAAP,eAAAC,EAAA,sEACRC,EAAgBC,IAAhB,iBAA8BJ,IADtB,OACzBK,EADyB,OAE/BJ,EAAS,CAAEK,KAAM,aAAcC,QAASF,EAASG,OAFlB,2CAAR,uDCKVC,eANS,SAACC,EAAOC,GAC9B,MAAO,CACLC,KAAMF,EAAMG,MAAMC,MAAK,SAACF,GAAD,OAAUA,EAAKZ,KAAOW,EAASI,aAI3CN,EAVI,SAAC,GAAc,IAAZG,EAAW,EAAXA,KACpB,OAAO,qBAAKI,UAAU,SAAf,SAAyBJ,EAAOA,EAAKK,KAAO,UC+BtCR,eANS,SAACC,GACvB,MAAO,CACLQ,MAAOR,EAAMQ,SAIuB,CAAEC,mBFtBR,yDAAM,WAAOlB,EAAUmB,GAAjB,SAAAlB,EAAA,sEAChCD,EAXkB,uCAAM,WAAOA,GAAP,eAAAC,EAAA,sEACPC,EAAgBC,IAAI,UADb,OACxBC,EADwB,OAE9BJ,EAAS,CAAEK,KAAM,cAAeC,QAASF,EAASG,OAFpB,2CAAN,uDAUc,OAKtCa,IAAEC,MAAMF,IAAWF,OAChBK,IAAI,UACJC,OACAC,SAAQ,SAACzB,GAAD,OAAQC,EAASF,EAAUC,OACnC0B,QATmC,2CAAN,0DEsBnBjB,EA9BE,SAAC,GAAmC,IAAjCU,EAAgC,EAAhCA,mBAAoBD,EAAY,EAAZA,MAqBtC,OAJAS,qBAAU,WACRR,MACC,CAACA,IAEG,qBAAKH,UAAU,0BAAf,SAnBEE,EAAMK,KAAI,SAACK,GAChB,OACE,sBAAKZ,UAAU,OAAf,UACE,mBAAGA,UAAU,mCACb,sBAAKA,UAAU,UAAf,UACE,sBAAKA,UAAU,cAAf,UACE,6BAAKY,EAAKC,QACV,4BAAID,EAAKE,UAEX,cAAC,EAAD,CAAYf,OAAQa,EAAKb,cAPFa,EAAK5B,YCEzB+B,EARH,WACV,OACE,qBAAKf,UAAU,eAAf,SACE,cAAC,EAAD,O,eCGSgB,EATO,WAAyB,IAAxBtB,EAAuB,uDAAf,GAAIuB,EAAW,uCAC5C,OAAQA,EAAO3B,MACb,IAAK,cACH,OAAO2B,EAAO1B,QAChB,QACE,OAAOG,I,QCIEwB,EATO,WAAyB,IAAxBxB,EAAuB,uDAAf,GAAIuB,EAAW,uCAC5C,OAAQA,EAAO3B,MACb,IAAK,aACH,MAAM,GAAN,mBAAWI,GAAX,CAAkBuB,EAAO1B,UAC3B,QACE,OAAOG,ICDEyB,cAAgB,CAAEjB,MAAOkB,EAAcvB,MAAOwB,ICIvDC,EAAQC,YAAYC,EAAUC,YAAgBC,MAEpDC,IAASC,OACP,cAAC,IAAD,CAAUN,MAAOA,EAAjB,SACE,cAAC,EAAD,MAEFO,SAASC,eAAe,W","file":"static/js/main.fc09890a.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nexport default axios.create({\r\n  baseURL: \"https://jsonplaceholder.typicode.com\",\r\n});\r\n","import _ from \"lodash\";\r\nimport jsonplaceholder from \"../apis/jsonPlaceholder\";\r\n\r\nexport const fetchPosts = () => async (dispatch) => {\r\n  const response = await jsonplaceholder.get(\"/posts\");\r\n  dispatch({ type: \"FETCH_POSTS\", payload: response.data });\r\n};\r\n\r\nexport const fetchUser = (id) => async (dispatch) => {\r\n  const response = await jsonplaceholder.get(`/users/${id}`);\r\n  dispatch({ type: \"FETCH_USER\", payload: response.data });\r\n};\r\n\r\nexport const fetchPostsAndUsers = () => async (dispatch, getState) => {\r\n  await dispatch(fetchPosts());\r\n  // const userIds = _.uniq(_.map(getState().posts, \"userId\"));\r\n  // userIds.forEach((id) => dispatch(fetchUser(id)));\r\n\r\n  _.chain(getState().posts)\r\n    .map(\"userId\")\r\n    .uniq()\r\n    .forEach((id) => dispatch(fetchUser(id)))\r\n    .value();\r\n};\r\n\r\n// export const fetchUser = (id) => (dispatch) => {\r\n//   _fetchUser(id, dispatch);\r\n// };\r\n\r\n// const _fetchUser = _.memoize(async (id, dispatch) => {\r\n//   const response = await jsonplaceholder.get(`/users/${id}`);\r\n//   dispatch({ type: \"FETCH_USER\", payload: response.data });\r\n// });\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst UserHeader = ({ user }) => {\r\n  return <div className=\"header\">{user ? user.name : null}</div>;\r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  return {\r\n    user: state.users.find((user) => user.id === ownProps.userId),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(UserHeader);\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { fetchPostsAndUsers } from \"../actions\";\r\nimport UserHeader from \"./UserHeader\";\r\n\r\nconst PostList = ({ fetchPostsAndUsers, posts }) => {\r\n  const renderList = () => {\r\n    return posts.map((post) => {\r\n      return (\r\n        <div className=\"item\" key={post.id}>\r\n          <i className=\"large middle aligned icon user\" />\r\n          <div className=\"content\">\r\n            <div className=\"description\">\r\n              <h2>{post.title}</h2>\r\n              <p>{post.body}</p>\r\n            </div>\r\n            <UserHeader userId={post.userId} />\r\n          </div>\r\n        </div>\r\n      );\r\n    });\r\n  };\r\n  useEffect(() => {\r\n    fetchPostsAndUsers();\r\n  }, [fetchPostsAndUsers]);\r\n\r\n  return <div className=\"ui relaxed divided list\">{renderList()}</div>;\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.posts,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { fetchPostsAndUsers })(PostList);\r\n","import React from \"react\";\r\nimport PostList from \"./PostList\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <div className=\"ui container\">\r\n      <PostList />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","const postsReducers = (state = [], action) => {\r\n  switch (action.type) {\r\n    case \"FETCH_POSTS\":\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default postsReducers;\r\n","const usersReducers = (state = [], action) => {\r\n  switch (action.type) {\r\n    case \"FETCH_USER\":\r\n      return [...state, action.payload];\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default usersReducers;\r\n","import { combineReducers } from \"redux\";\r\nimport postsReducer from \"./postsReducer\";\r\nimport usersReducer from \"./usersReducer\";\r\n\r\nexport default combineReducers({ posts: postsReducer, users: usersReducer });\r\n","import ReactDOM from \"react-dom\";\r\nimport React from \"react\";\r\nimport App from \"./components/App\";\r\nimport { createStore, applyMiddleware } from \"redux\";\r\nimport { Provider } from \"react-redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport Reducers from \"./reducers\";\r\n\r\nconst store = createStore(Reducers, applyMiddleware(thunk));\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}